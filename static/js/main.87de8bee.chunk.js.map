{"version":3,"sources":["Assets/kidsloop_min_logo.svg","Assets/light.svg","Assets/arrow.svg","Assets/arrow-white.svg","Assets/dark.svg","Components/SignInFooter.tsx","Components/SignIn.tsx","Components/GoBack.tsx","Components/ForgotPassWord.tsx","Components/SignUp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SignInFooter","theme","localStorage","getItem","useState","themeState","setThemeState","useEffect","document","documentElement","setAttribute","setItem","className","src","light","dark","alt","onClick","getAttribute","name","id","onChange","e","console","log","target","value","lang","arrow","arrowWhite","href","SignIn","barRef","useRef","formRef","ref","style","width","logo","initialValues","email","password","validationSchema","Yup","min","required","onSubmit","values","current","display","transition","setTimeout","alert","JSON","stringify","render","errors","touched","autoComplete","component","type","placeholder","borderColor","to","GoBack","history","useHistory","goBack","ForgotPassWord","SignUp","phone","matches","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.87de8bee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kidsloop_min_logo.8a888a62.svg\";","export default __webpack_public_path__ + \"static/media/light.6917deac.svg\";","export default __webpack_public_path__ + \"static/media/arrow.9d3c1a34.svg\";","export default __webpack_public_path__ + \"static/media/arrow-white.9df459a8.svg\";","export default __webpack_public_path__ + \"static/media/dark.3b658720.svg\";","import React, { useEffect, useState } from 'react'\r\nimport light from '../Assets/light.svg'\r\nimport arrow from '../Assets/arrow.svg'\r\nimport arrowWhite from '../Assets/arrow-white.svg'\r\nimport dark from '../Assets/dark.svg'\r\n\r\nconst SignInFooter: React.FC = () => {\r\n    const theme = localStorage.getItem('theme')\r\n    const [themeState, setThemeState] = useState(theme ? theme : 'light')\r\n\r\n    useEffect(() => {\r\n        if(theme) {\r\n            document.documentElement.setAttribute('data-theme', theme)\r\n        }\r\n        else {\r\n            localStorage.setItem('theme', 'light')\r\n            document.documentElement.setAttribute('data-theme', 'light')\r\n        }\r\n    }, [theme])\r\n\r\n    const handleToggle = () => {\r\n        document.documentElement.getAttribute('data-theme') !== 'dark' ? document.documentElement.setAttribute('data-theme', 'dark') : document.documentElement.setAttribute('data-theme', 'light')\r\n        theme === 'light' ? localStorage.setItem('theme', 'dark') : localStorage.setItem('theme', 'light')\r\n        themeState === 'light' ? setThemeState('dark') : setThemeState('light')\r\n    }\r\n    const handleChange = (e: any) => {\r\n        console.log(e.target.value)\r\n        document.documentElement.setAttribute('lang', e.target.value)\r\n    }\r\n    return (\r\n        <div className=\"sign-in-footer\" >\r\n            <div className=\"right\" >\r\n                <img src={themeState === 'light' ? light : dark} alt=\"brightness-logo\" className=\"brightness-logo\" onClick={handleToggle} />\r\n                <div className=\"custom-select\" >\r\n                    <select name=\"languages\" id=\"select-language\" className=\"select-language\" onChange={handleChange}>\r\n                        <option lang=\"en\" value=\"en\">English</option>\r\n                        <option lang=\"de\" value=\"de\">Deutsch</option>\r\n                        <option lang=\"fr\" value=\"fr\">Fran√ßais</option>\r\n                        <option lang=\"it\" value=\"it\">Italiano</option>\r\n                    </select>\r\n                    <img src={themeState === 'light' ? arrow : arrowWhite} className=\"select-arrow\" alt=\"arrow-logo\" />\r\n                </div>\r\n            \r\n            </div>\r\n            <div className=\"left\" >\r\n                <a href=\"/\" >Help</a>\r\n                <a href=\"/\" >Privacy</a>\r\n                <a href=\"/\" >Terms</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignInFooter\r\n","import React, { useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../Assets/kidsloop_min_logo.svg'\r\nimport SignInFooter from './SignInFooter'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\nconst SignIn: React.FC = () => {\r\n    const barRef = useRef<HTMLDivElement>(null)\r\n    const formRef = useRef<HTMLFormElement>(null)\r\n\r\n    return (\r\n        <div className='sign-in-background' >\r\n            <div className=\"progress-bar\" ref={barRef} style={{width: '0%'}}  ></div>\r\n            <div className=\"sign-in-wrapper\" >\r\n                <div className=\"sign-in-form\" >\r\n                    <img src={logo} className=\"kids-loop-logo\" alt=\"kids-loop-logo\" />\r\n                    <h2 className='title' >Sign In</h2>\r\n                    <Formik\r\n                        initialValues = {{\r\n                            email: \"\",\r\n                            password: \"\"\r\n                        }}\r\n                        validationSchema = {Yup.object({\r\n                            email: Yup.string()\r\n                            .min(3, 'Too Short!')\r\n                            .email(\"Invalid email format\")\r\n                            .required(\"Required!\"),\r\n                            password: Yup.string()\r\n                            .required(\"Required!\"),\r\n                        })}\r\n                        onSubmit ={values => {\r\n                            barRef.current && (barRef.current.style.display = 'block')\r\n                            barRef.current && (barRef.current.style.transition = '1s linear width')\r\n                            barRef.current && (barRef.current.style.width = '100%')\r\n                            console.log('submit')\r\n                            setTimeout(() => {\r\n                                console.log('submit')\r\n                                barRef.current && (barRef.current.style.display = 'none')\r\n                                alert(JSON.stringify(values, null, 2));\r\n                            }, 1000);\r\n                            }}\r\n                        render={({ errors, touched }) => (\r\n                                \r\n\r\n                            <Form className='sign-in-form-main' ref={formRef} autoComplete=\"on\" >\r\n                                <div className=\"form-error\" >\r\n                                    <ErrorMessage name=\"email\" component=\"p\"/>\r\n                                </div>\r\n                                <Field\r\n                                    autoComplete=\"username\"\r\n                                    className=\"sign-in-inputs\"\r\n                                    type = 'email'\r\n                                    name = 'email'\r\n                                    placeholder = 'Email *'\r\n                                    style={{\r\n                                        borderColor: errors.email && touched.email ? 'tomato' : ' #999999'\r\n                                    }}\r\n\r\n                                />\r\n                                <div className=\"form-error\" >\r\n                                    <ErrorMessage name=\"password\" component=\"p\"/>\r\n                                </div>\r\n                                <Field\r\n                                    autoComplete=\"new-password\"\r\n                                    className=\"sign-in-inputs\"\r\n                                    type = 'password'\r\n                                    name = 'password'\r\n                                    placeholder = 'Password *'\r\n                                    style={{\r\n                                        borderColor: errors.password && touched.password ?  'tomato' : ' #999999'\r\n                                    }}\r\n                                />\r\n                                <div className=\"sign-in-form-footer\" >\r\n                                    <Link to=\"/password-reset\" >Forgot Password?</Link>\r\n                                    <button className=\"sign-in-submit\" type=\"submit\" >Sign In</button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    />\r\n\r\n                    <div className=\"sign-in-create\" >\r\n                        <Link to=\"/signup\" >Create an account</Link>\r\n                    </div>\r\n                </div>\r\n                <SignInFooter />\r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default SignIn\r\n\r\n\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst GoBack: React.FC = () => {\r\n    let history = useHistory()\r\n\r\n    return <div className='go-back' onClick={() => history.goBack()} >Go Back</div>\r\n\r\n}\r\n\r\nexport default GoBack\r\n","import React, { useRef } from 'react'\r\nimport SignInFooter from './SignInFooter'\r\nimport logo from '../Assets/kidsloop_min_logo.svg'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\nimport * as Yup from \"yup\"\r\nimport GoBack from './GoBack'\r\n\r\nconst ForgotPassWord: React.FC = () => {\r\n\r\n    const barRef = useRef<HTMLDivElement>(null)\r\n    const formRef = useRef<HTMLFormElement>(null)\r\n\r\n    return (\r\n        <div className='sign-in-background' >\r\n            <div className=\"progress-bar\" ref={barRef} style={{width: '0%'}}  ></div>\r\n            <div className=\"sign-in-wrapper\" >\r\n                <GoBack />\r\n                <div className=\"sign-in-form\" >\r\n                    <img src={logo} className=\"kids-loop-logo\" alt=\"kids-loop-logo\" />\r\n                    <h2 className='title' >Password Reset</h2>\r\n                    <Formik\r\n                        initialValues = {{\r\n                            email: \"\",\r\n                        }}\r\n                        validationSchema = {Yup.object({\r\n                            email: Yup.string()\r\n                            .min(3, 'Too Short!')\r\n                            .email(\"Invalid email format\")\r\n                            .required(\"Required!\"),\r\n                        })}\r\n                        onSubmit ={values => {\r\n                            barRef.current && (barRef.current.style.display = 'block')\r\n                            barRef.current && (barRef.current.style.transition = '1s linear width')\r\n                            barRef.current && (barRef.current.style.width = '100%')\r\n                            console.log('submit')\r\n                            setTimeout(() => {\r\n                                console.log('submit')\r\n                                barRef.current && (barRef.current.style.display = 'none')\r\n                                alert(JSON.stringify(values, null, 2));\r\n                            }, 1000);\r\n                            }}\r\n                        render={({ errors, touched }) => (\r\n                            <Form className='sign-in-form-main' ref={formRef}>\r\n                                <div className=\"form-error\" >\r\n                                    <ErrorMessage name=\"email\" component=\"p\"/>\r\n                                </div>\r\n                                <Field\r\n                                    className=\"sign-in-inputs\"\r\n                                    type = 'email'\r\n                                    name = 'email'\r\n                                    placeholder = 'Email *'\r\n                                    style={{\r\n                                        borderColor: errors.email && touched.email ? 'tomato' : ' #999999'\r\n                                    }}\r\n                                />\r\n                                <div className=\"sign-in-form-footer\" >\r\n                                    <button className=\"sign-in-submit\" type=\"submit\" >Search</button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                        />\r\n                    \r\n                </div>\r\n                <SignInFooter />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassWord\r\n","import React, { useRef } from 'react'\r\nimport logo from '../Assets/kidsloop_min_logo.svg'\r\nimport SignInFooter from './SignInFooter'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport \"yup-phone\";\r\nimport GoBack from './GoBack';\r\n\r\nconst SignUp: React.FC = () => {\r\n\r\n\r\n    const barRef = useRef<HTMLDivElement>(null)\r\n    const formRef = useRef<HTMLFormElement>(null)\r\n    const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n    return (\r\n        <div className='sign-in-background' >\r\n            <div className=\"progress-bar\" ref={barRef} style={{width: '0%'}}  ></div>\r\n            <div className=\"sign-in-wrapper\" >\r\n                <GoBack />\r\n                <div className=\"sign-in-form\" >\r\n                    <img src={logo} className=\"kids-loop-logo\" alt=\"kids-loop-logo\" />\r\n                    <h2 className='title' >Create your account</h2>\r\n                    <Formik\r\n                        initialValues = {{\r\n                            name: \"\",\r\n                            phone: \"\",\r\n                            email: \"\",\r\n                            password: \"\",\r\n                        }}\r\n                        validationSchema = {Yup.object({\r\n                            name: Yup.string()\r\n                                .min(2, 'Too Short!')\r\n                                .required('Required'),\r\n                            phone: Yup.string()\r\n                                .matches(phoneRegExp, 'Invalid phone number')\r\n                                .required(\"Required!\"),\r\n                            email: Yup.string()\r\n                                .min(3, 'Too Short!')\r\n                                .email(\"Invalid email format\")\r\n                                .required(\"Required!\"),\r\n                            password: Yup.string()\r\n                                .required(\"Required!\"),\r\n                            \r\n                        })}\r\n                        onSubmit ={values => {\r\n                            barRef.current && (barRef.current.style.display = 'block')\r\n                            barRef.current && (barRef.current.style.transition = '1s linear width')\r\n                            barRef.current && (barRef.current.style.width = '100%')\r\n                            console.log('submit')\r\n                            setTimeout(() => {\r\n                                console.log('submit')\r\n                                barRef.current && (barRef.current.style.display = 'none')\r\n                                alert(JSON.stringify(values, null, 2));\r\n                            }, 1000);\r\n                            }}\r\n                        render={({ errors, touched }) => (\r\n                            <Form className='sign-in-form-main' ref={formRef}>\r\n                                <div className=\"form-error\" >\r\n                                    <ErrorMessage name=\"name\" component=\"p\"/>\r\n                                </div>\r\n                                <Field\r\n                                    className=\"sign-in-inputs\"\r\n                                    type = 'text'\r\n                                    name = 'name'\r\n                                    placeholder = 'Name *'\r\n                                    style={{\r\n                                        borderColor: errors.name && touched.name ? 'tomato' : ' #999999'\r\n                                    }}\r\n\r\n                                />\r\n                                <div className=\"form-error\" >\r\n                                    <ErrorMessage name=\"phone\" component=\"p\"/>\r\n                                </div>\r\n                                <Field\r\n                                    className=\"sign-in-inputs\"\r\n                                    type = 'tel'\r\n                                    name = 'phone'\r\n                                    placeholder = 'Phone Number *'\r\n                                    style={{\r\n                                        borderColor: errors.phone && touched.phone ? 'tomato' : ' #999999'\r\n                                    }}\r\n\r\n                                />\r\n                                <div className=\"form-error\" >\r\n                                    <ErrorMessage name=\"email\" component=\"p\"/>\r\n                                </div>\r\n                                <Field\r\n                                    className=\"sign-in-inputs\"\r\n                                    type = 'email'\r\n                                    name = 'email'\r\n                                    placeholder = 'Email *'\r\n                                    style={{\r\n                                        borderColor: errors.name && touched.name ? 'tomato' : ' #999999'\r\n                                    }}\r\n\r\n                                />\r\n                                <div className=\"form-error\" >\r\n                                    <ErrorMessage name=\"password\" component=\"p\"/>\r\n                                </div>\r\n                                <Field\r\n                                    className=\"sign-in-inputs\"\r\n                                    type = 'password'\r\n                                    name = 'password'\r\n                                    placeholder = 'Password *'\r\n                                    style={{\r\n                                        borderColor: errors.password && touched.password ? 'tomato' : ' #999999'\r\n                                    }}\r\n                                />\r\n                                <div className=\"sign-in-form-footer\" >\r\n                                    <button className=\"sign-in-submit\" type=\"submit\" >Sign Up</button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    />\r\n                    \r\n                </div>\r\n                <SignInFooter />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react'\nimport './App.css';\nimport './App.scss';\nimport SignIn from './Components/SignIn';\nimport ForgotPassWord from './Components/ForgotPassWord';\nimport SignUp from './Components/SignUp';\nimport {  \n  BrowserRouter as Router,\n  Switch,\n  Route, \n} from 'react-router-dom';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/password-reset\">\n            <ForgotPassWord/>\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignUp/>\n          </Route>\n          <Route exact path=\"/\">\n            <SignIn/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}